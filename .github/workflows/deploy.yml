name: Deploy to Digital Ocean

on:
  push:
    branches: [ main ]

env:
  REGISTRY: "registry.digitalocean.com/dbkynd"
  IMAGE_NAME: "streaminfo"

jobs:
  test_backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Yarn Cache
      uses: c-hive/gha-yarn-cache@v2
      with:
        directory: ./backend

    - name: Install Node
      uses: actions/setup-node@v2
      with:
        node-version: 16

    - name: Yarn Install
      run: yarn install --immutable --immutable-cache --check-cache

    - name: Prettify
      run: yarn prettier

    - name: ESLint
      run: yarn lint

    - name: Jest Tests
      run: yarn test

  test_frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Yarn Cache
        uses: c-hive/gha-yarn-cache@v2
        with:
          directory: ./frontend

      - name: Install Node
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Yarn Install
        run: yarn install --immutable --immutable-cache --check-cache

      - name: Prettify
        run: yarn prettier

      - name: ESLint
        run: yarn lint

      #- name: Jest Tests
      #  run: yarn test:unit

  build_and_push:
    runs-on: ubuntu-latest
    needs: [test_backend, test_frontend]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Docker Build
        run: docker build -t $(echo $REGISTRY)/$(echo $IMAGE_NAME):latest .

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 600

      - name: Remove old image
        run:  docker rmi $(echo $REGISTRY)/$(echo $IMAGE_NAME):latest

      - name: Push image to DigitalOcean Container Registry
        run: docker push $(echo $REGISTRY)/$(echo $IMAGE_NAME):latest

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push

    steps:
      - name: Deploy to Digital Ocean droplet via SSH action
        uses: appleboy/ssh-action@v0.1.3
        with:
          HOST: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}
          KEY: ${{ secrets.SSHKEY }}
          envs: IMAGE_NAME,REGISTRY,GITHUB_SHA
          script: |
            # Login to the Digital Ocean Registry
            docker login -u ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} -p ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} registry.digitalocean.com

            # Stop running container
            docker stop $(echo $IMAGE_NAME)

            # Remove old container
            docker rm $(echo $IMAGE_NAME)

            # Pull latest image
            docker pull $(echo $REGISTRY)/$(echo $IMAGE_NAME):latest

            # Run container
            docker run -d \
            --restart always \
            --env-file /root/streaminfo/.env \
            -p 3000:3000 \
            --name $(echo $IMAGE_NAME) \
            $(echo $REGISTRY)/$(echo $IMAGE_NAME):latest
