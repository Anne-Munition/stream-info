name: Deploy to Digital Ocean

on:
  push:
    branches: [ dev ]

env:
  REGISTRY: "registry.digitalocean.com/dbkynd"
  IMAGE_NAME: "streaminfo"

jobs:
  test_backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Yarn Cache
      uses: c-hive/gha-yarn-cache@v2
      with:
        directory: ./backend

    - name: Install Node
      uses: actions/setup-node@v2
      with:
        node-version: 16

    - name: Yarn Install
      run: yarn install --immutable --immutable-cache --check-cache

    - name: Prettify
      run: yarn prettier

    - name: ESLint
      run: yarn lint

    - name: Jest Tests
      run: yarn test

  test_frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Yarn Cache
        uses: c-hive/gha-yarn-cache@v2
        with:
          directory: ./frontend

      - name: Install Node
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Yarn Install
        run: yarn install --immutable --immutable-cache --check-cache

      - name: Prettify
        run: yarn prettier

      - name: ESLint
        run: yarn lint

      #- name: Jest Tests
      #  run: yarn test:unit

  build_and_push:
    runs-on: ubuntu-latest
    needs: [test_backend, test_frontend]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Docker Build
        #run: docker build -t $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7) .
        run: docker build -t $(echo $REGISTRY)/$(echo $IMAGE_NAME):dev .
